# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish Tracks

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: generate some things
        id: generate
        env:
          GMAP_APIKEY : ${{ secrets.GMAP_APIKEY }}
        continue-on-error: true
        run: |
          pip install -r requirements.txt
          export PYTHONPATH='.'
          python lemon_pi/utils/plot_tracks.py

      - id: upload-file
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: resources/tracks.yaml
          destination: perplexus/public

      - id: upload-html
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: tracks
          destination: perplexus/public

      - id: generate-thumbnails
        name: Generating thumbnails
        if: steps.generate.outcome == 'success'
        run: |
          echo "generating thumbnails"
          pip install pyppeteer
          python lemon_pi/utils/html_to_image.py `ls tracks/*.html`
          for x in tracks/*.html ; do
            image=`echo $x | sed 's/\.html/\.jpg/'`
            python lemon_pi/utils/image_crop.py $image
          done
          mkdir tracks/thumbnails
          for x in tracks/*-clipped.jpg ; do
            target=`echo $x | sed 's/-clipped//'`
            mv $x tracks/thumbnails/`basename $target`
          done

      - id: upload-images
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: tracks/thumbnails
          destination: perplexus/public

      - id: update-track-page
        if: steps.generate.outcome == 'success'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          # gen the track file
          # head README-tracks.md -n 10 > README-tracks.tmp.md
          urlbase="https://storage.googleapis.com/perplexus/public"
          for x in tracks/*.html ; do
            img=`echo $x | sed -e 's/.html/.jpg/' -e 's/tracks/thumbnails/'`
            name=`grep "<title>" $x | sed -e 's/<title>//' -e 's/<\/title>//'`
            if [[ $name != *_ ]] ; then
              echo '' >> README-tracks.tmp.md
              echo '# '"$name" >> README-tracks.tmp.md
              echo '<a href='"${urlbase}/${x}"'><img src='"${urlbase}/${img}"'></a>' >> README-tracks.tmp.md
              echo '' >> README-tracks.tmp.md
              echo '[Zoomable map]('${urlbase}/${x}')' >> README-tracks.tmp.md
              echo '' >> README-tracks.tmp.md
            fi
          done

          rm README-tracks.md
          mv README-tracks.tmp.md README-tracks.md
          rm -rf tracks

          if [[ $(git diff --stat) != '' ]]; then
            echo "diff_state=dirty" >> $GITHUB_ENV
            now=`date +%Y%m%d-%H%M`
            branch="auto-tracks-$now"
            echo "tmp_branch=$branch" >> $GITHUB_ENV
          else
            echo "diff_state=clean" >> $GITHUB_ENV
          fi

      - id: pull-request
        if: steps.generate.outcome == 'success' && env.diff_state == 'dirty'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ env.tmp_branch }}
          base: main
          delete-branch: true
          title: 'Update Tracks.md'
          body: |
            Update README-tracks.md
            - Updated with new track data
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          assignees: sprintf






