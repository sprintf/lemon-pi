# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish Tracks

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: generate some things
        id: generate
        env:
          GMAP_APIKEY : ${{ secrets.GMAP_APIKEY }}
        continue-on-error: true
        run: |
          pip install -r requirements.txt
          export PYTHONPATH='.'
          python utils/plot_tracks.py

      - id: upload-file
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: resources/tracks.yaml
          destination: perplexus/public

      - id: upload-html
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: tracks
          destination: perplexus/public

      - id: generate-thumbnails
        name: Generating thumbnails
        if: steps.generate.outcome == 'success'
        run: |
          echo "generating thumbnails"
          pip install pyppeteer
          for x in tracks/*.html ; do
            python utils/html_to_image.py $x
          done
          mkdir tracks/thumbnails
          mv tracks/*.png tracks/thumbnails

      - id: upload-images
        if: steps.generate.outcome == 'success'
        uses: google-github-actions/upload-cloud-storage@main
        with:
          credentials: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          path: tracks/thumbnails
          destination: perplexus/public

      - id: update-track-page
        if: steps.generate.outcome == 'success'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          # gen the track file
          head README-tracks.md -n 10 > README-tracks.tmp.md
          for x in tracks/*.html ; do
            img=`echo $x | sed -e 's/.html/.png/' -e 's/tracks/tracks\/thumbnails/'`
            name=`grep <title> $x | sed -e 's/<title>//' -e 's/<\/title>//'`
            echo '!['$name' (https://storage.googleapis.com/perplexus/public/'${x}')]' >> README-tracks.tmp.md
            echo '(https://storage.googleapis.com/perplexus/public/'${img}')' >> README-tracks.tmp.md
          done

          rm README-tracks.md
          mv README-tracks.tmp.md README-tracks.md

          git add README-tracks.md
          git commit -m "auto generated"
          git push origin master

